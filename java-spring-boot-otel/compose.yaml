services:
  postgres:
    container_name: postgres
    image: postgres:latest
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=sandbox
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --locale=C.UTF-8
    volumes:
      - type: bind
        source: ./tools/schema.sql
        target: /docker-entrypoint-initdb.d/schema.sql
        read_only: true
      # - type: volume
      #   source: postgres
      #   target: /var/lib/postgresql/data
    healthcheck:
      test: pg_isready -h localhost -U user -d sandbox
  # pgweb:
  #   container_name: pgweb
  #   image: sosedoff/pgweb:latest
  #   ports:
  #     - 8081:8081
  #   environment:
  #     - PGWEB_DATABASE_URL=postgres://user:password@postgres:5432/sandbox?sslmode=disable
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  # minio:
  #   container_name: minio
  #   image: quay.io/minio/minio:latest
  #   ports:
  #     - 8082:9000
  #     - 8083:9001
  #   command: server /data --console-address :9001
  #   environment:
  #     - MINIO_ROOT_USER=user
  #     - MINIO_ROOT_PASSWORD=password
  #     - MINIO_ACCESS_KEY=SANDBOXACCESSKEY
  #     - MINIO_SECRET_KEY=SANDBOXSECRETKEY
  comment-api:
    container_name: comment-api
    image: node:latest
    ports:
      - 8084:8084
    working_dir: /work
    command: node --experimental-strip-types comment.ts
    environment:
      - NODE_ENV=production
    volumes:
      - type: bind
        source: ./tools
        target: /work
        read_only: true
  opentelemetry-collector:
    container_name: opentelemetry-collector
    image: otel/opentelemetry-collector:latest
    ports:
      - 4318:4318
    volumes:
      - type: bind
        source: ./otel.yaml
        target: /etc/otelcol/config.yaml
        read_only: true
    depends_on:
      - loki
  grafana:
    container_name: grafana
    image: grafana/grafana-enterprise:latest
    ports:
      - 3000:3000
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_LOG_LEVEL=warn
      - GF_INSTALL_PLUGINS=grafana-lokiexplore-app,grafana-exploretraces-app
    volumes:
      - type: bind
        source: ./datasources.yaml
        target: /etc/grafana/provisioning/datasources/datasources.yaml
        read_only: true
      # - type: volume
      #   source: grafana
      #   target: /var/lib/grafana
  mimir:
    container_name: mimir
    image: grafana/mimir:latest
    command: -config.file=/etc/mimir/config.yaml
    volumes:
      - type: bind
        source: ./mimir.yaml
        target: /etc/mimir/config.yaml
        read_only: true
  loki:
    container_name: loki
    image: grafana/loki:latest
    command: -config.file=/etc/loki/config.yaml
    volumes:
      - type: bind
        source: ./loki.yaml
        target: /etc/loki/config.yaml
        read_only: true
  tempo:
    container_name: tempo
    image: grafana/tempo:latest
    command: -config.file=/etc/tempo/config.yaml
    volumes:
      - type: bind
        source: ./tempo.yaml
        target: /etc/tempo/config.yaml
        read_only: true
