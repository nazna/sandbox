// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0

package dev.nazna.examplespringmodulith.user.repository

import java.sql.Connection
import java.sql.SQLException
import java.time.OffsetDateTime

const val findUser = """-- name: findUser :one
SELECT id, name, created_at, updated_at
FROM "user"
WHERE id = ?
LIMIT 1
"""

class QueriesImpl(private val conn: Connection) : Queries {

    @Throws(SQLException::class)
    override fun findUser(id: Long): User? {
        return conn.prepareStatement(findUser).use { stmt ->
            stmt.setInt(1, id.toInt())

            val results = stmt.executeQuery()
            if (!results.next()) {
                return null
            }
            val ret = User(
                results.getInt(1),
                results.getString(2),
                results.getObject(3, OffsetDateTime::class.java),
                results.getObject(4, OffsetDateTime::class.java)
            )
            if (results.next()) {
                throw SQLException("expected one row in result set, but got many")
            }
            ret
        }
    }

}

